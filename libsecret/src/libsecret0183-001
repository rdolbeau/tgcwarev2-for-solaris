--- libsecret-0.18.3/egg/egg-secure-memory.c.orig	2014-09-23 08:49:21.000000000 +0100
+++ libsecret-0.18.3/egg/egg-secure-memory.c	2015-10-28 16:58:01.568941000 +0000
@@ -188,8 +188,8 @@
 	/* Create a new pool */
 	if (pool == NULL) {
 		len = getpagesize () * 2;
-		pages = mmap (0, len, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);
-		if (pages == MAP_FAILED)
+		pages = malloc(len);
+		if (pages == NULL)
 			return NULL;
 
 		/* Fill in the block header, and inlude in block list */
@@ -253,7 +253,7 @@
 		VALGRIND_DESTROY_MEMPOOL (pool);
 #endif
 
-		munmap (pool, pool->length);
+		free(pool);
 		return;
 	}
 
@@ -864,8 +864,8 @@
 	*sz = (*sz + pgsize -1) & ~(pgsize - 1);
 
 #if defined(HAVE_MLOCK)
-	pages = mmap (0, *sz, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);
-	if (pages == MAP_FAILED) {
+	pages = malloc(*sz);
+	if (pages == NULL) {
 		if (show_warning && egg_secure_warnings)
 			fprintf (stderr, "couldn't map %lu bytes of memory (%s): %s\n",
 			         (unsigned long)*sz, during_tag, strerror (errno));
@@ -879,7 +879,7 @@
 			         (unsigned long)*sz, during_tag, strerror (errno));
 			show_warning = 0;
 		}
-		munmap (pages, *sz);
+		free(pages);
 		return NULL;
 	}
 
@@ -907,8 +907,7 @@
 	if (munlock (pages, sz) < 0 && egg_secure_warnings)
 		fprintf (stderr, "couldn't unlock private memory: %s\n", strerror (errno));
 
-	if (munmap (pages, sz) < 0 && egg_secure_warnings)
-		fprintf (stderr, "couldn't unmap private anonymous memory: %s\n", strerror (errno));
+	free(pages);
 
 	DEBUG_ALLOC ("gkr-secure-memory: freed block ", sz);
 
